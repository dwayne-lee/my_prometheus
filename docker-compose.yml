version: '3.3'

networks:
  prometheus_net:
    driver: overlay
    driver_opts:
      encrypted: "true"
    attachable: "true"
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"

volumes:
  prometheus-data: {}
  grafana-data: {}
  grafana-plugins: {}

configs:
  prometheus.yml:
    external: true

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - prometheus_net
    ports:
      - 9090:9090
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/data'
    volumes:
      - prometheus-data:/prometheus/data
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
      placement:
        constraints:
          - node.role == manager
          - node.platform.os == linux
    depends_on:
      - cadvisor
      - node-exporter
    restart: unless-stopped

  cadvisor:
    image:  google/cadvisor:latest
    container_name: cadvisor
    networks:
      - prometheus_net
    ports:
      - 8080:8080
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    deploy:
      mode: global
      labels:
        - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    networks:
      - prometheus_net
    ports:
      - 9091:9091
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    deploy:
      mode: global
      labels:
        - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - prometheus_net
    ports:
      - 9100:9100
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    volumes:
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    deploy:
      mode: global
      labels:
        - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - prometheus_net
    ports:
      - 3000:3000
    labels:
      - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-plugins:/var/lib/grafana/plugins
    environment:
      - GF_SECURITY_ADMIN_PASSWORD: /run/secrets/grafana_admin_pass
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "com.docker.ucp.access.label=/Shared/DevTeams/Yoda/Prod"
      placement:
        constraints:
          - node.role == manager
          - node.platform.os == linux
    depends_on:
      - prometheus
      - cadvisor

